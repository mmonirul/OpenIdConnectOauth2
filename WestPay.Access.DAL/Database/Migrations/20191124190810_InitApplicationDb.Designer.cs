// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WestPay.Access.DAL.Database;

namespace WestPay.Access.DAL.Database.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191124190810_InitApplicationDb")]
    partial class InitApplicationDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Library.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuthorBiographyId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("Id");

                    b.HasIndex("AuthorBiographyId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Library.AuthorBiography", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Biography");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Nationality");

                    b.Property<string>("PlaceOfBirth");

                    b.HasKey("Id");

                    b.ToTable("Biographies");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Library.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<string>("CreatedBy");

                    b.Property<string>("ISBN")
                        .IsRequired();

                    b.Property<string>("Language");

                    b.Property<DateTime>("LastUpdatedAt");

                    b.Property<string>("LastUpdatedBy");

                    b.Property<int>("Pages");

                    b.Property<Guid>("PublisherId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ISBN")
                        .IsUnique();

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Library.BookCategory", b =>
                {
                    b.Property<int>("BookId");

                    b.Property<int>("CategoryId");

                    b.HasKey("BookId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("BookCategory");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Library.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Library.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Terminals.OperationSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ChipXpress");

                    b.Property<int>("LastEvent");

                    b.Property<string>("PhysicalTerminalId")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("ReceiptMerchantName")
                        .HasMaxLength(100);

                    b.Property<string>("ReceiptPhoneNumber")
                        .HasMaxLength(30);

                    b.Property<bool>("Signature");

                    b.Property<string>("TerminalModelId")
                        .IsRequired();

                    b.Property<string>("TerminalOperationModeId")
                        .IsRequired();

                    b.Property<int>("TerminalidOrderId");

                    b.Property<bool>("Tipping");

                    b.HasKey("Id");

                    b.ToTable("OperationSetting");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Terminals.PhysicalTerminal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CustomerId");

                    b.Property<int>("LastEvent");

                    b.Property<string>("MerchantPassword");

                    b.Property<string>("Serial");

                    b.Property<string>("TerminalId");

                    b.Property<int>("TerminalModelId");

                    b.Property<int>("TerminalOperationSettingId");

                    b.Property<DateTime?>("TimeCreated");

                    b.Property<DateTime?>("TimeModified");

                    b.HasKey("Id");

                    b.HasIndex("TerminalModelId");

                    b.ToTable("PhysicalTerminals");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Terminals.TerminalModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool?>("IsTerminal");

                    b.Property<string>("Name");

                    b.Property<string>("SerialPrefix");

                    b.HasKey("Id");

                    b.ToTable("TerminalModels");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Terminals.TerminalOperationMode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.Property<string>("RawName");

                    b.HasKey("Id");

                    b.ToTable("TerminalOperationModes");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Terminals.TerminalOperationSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("FirstTransactionTime");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime?>("LastTransactionTime");

                    b.Property<string>("PAVersion")
                        .HasMaxLength(20);

                    b.Property<string>("ReceivedParameters")
                        .HasMaxLength(220);

                    b.Property<int>("TerminalId");

                    b.Property<int>("TerminalOperatingModeId");

                    b.Property<int>("TerminalidId");

                    b.HasKey("Id");

                    b.ToTable("TerminalOperationSetting");
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Library.Author", b =>
                {
                    b.HasOne("WestPay.Access.DAL.Entities.Library.AuthorBiography", "Biography")
                        .WithMany()
                        .HasForeignKey("AuthorBiographyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Library.Book", b =>
                {
                    b.HasOne("WestPay.Access.DAL.Entities.Library.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WestPay.Access.DAL.Entities.Library.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Library.BookCategory", b =>
                {
                    b.HasOne("WestPay.Access.DAL.Entities.Library.Book", "Book")
                        .WithMany("BookCategories")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WestPay.Access.DAL.Entities.Library.Category", "Category")
                        .WithMany("BookCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WestPay.Access.DAL.Entities.Terminals.PhysicalTerminal", b =>
                {
                    b.HasOne("WestPay.Access.DAL.Entities.Terminals.TerminalModel", "TerminalModel")
                        .WithMany()
                        .HasForeignKey("TerminalModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
